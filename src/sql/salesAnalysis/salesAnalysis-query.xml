<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM
"http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="getReceiptListCount">
		SELECT
			   COUNT(*)
		  FROM RECEIPT
		 WHERE USER_NO = ?
		   AND SALE_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE
	</entry>
	<entry key="getDailyReceiptListCount">
		SELECT
			   COUNT(*)
		  FROM RECEIPT
		 WHERE USER_NO = ?
		   AND TO_CHAR(SALE_DATE, 'YYYYMMDD') BETWEEN ? AND ?
	</entry>
	<entry key="getMonthlyReceiptListCount">
		SELECT
			   COUNT(*)
		  FROM RECEIPT
		 WHERE USER_NO = ?
		   AND TO_CHAR(SALE_DATE, 'YYYYMMDD') BETWEEN  TO_CHAR(TO_DATE(?, 'YYYYMM'), 'YYYYMMDD') AND TO_CHAR(LAST_DAY(TO_DATE(?, 'YYYYMM')), 'YYYYMMDD')
	</entry>
	<entry key="selectRecentReceiptList">
		SELECT
		       RANK
		     , ROWNUM
		     , ORDER_COUNT
		     , OPTION_YN
		     , OPT_COUNT
		     , ORDER_NO
		     , SALE_DATE
		     , ORDER_SUM
		     , PRODUCT_NO
		     , ORDER_STATE_NO
		     , CATEGORY_NAME
		     , PRODUCT_NAME
		     , PRODUCT_IMG
		     , PRODUCT_QTY
		     , OPTION_NAME
		     , OPTION_QTY
		  FROM(SELECT
		       DENSE_RANK() OVER (ORDER BY RLIST.ORDER_NO DESC) RANK
		     , RLIST.*
		  FROM (SELECT
		       SR.ORDER_COUNT
		     , PB.OPTION_YN
		     , OC.OPT_COUNT
		     , R.ORDER_NO
		     , R.SALE_DATE
		     , R.ORDER_SUM
		     , R.PRODUCT_NO
		     , R.ORDER_STATE_NO
		     , PC.CATEGORY_NAME
		     , P.PRODUCT_NAME
		     , P.PRODUCT_IMG
		     , PB.QUANTITY PRODUCT_QTY
		     , O.OPTION_NAME
		     , OB.QUANTITY OPTION_QTY
		  FROM RECEIPT R
		  JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
		  JOIN OPTION_BUY OB ON(R.ORDER_NO = OB.ORDER_NO)
		  JOIN PRODUCT P ON(PB.PRODUCT_NO = P.PRODUCT_NO)
		  JOIN PRODUCT_CATEGORY PC ON(P.CATEGORY_NO = PC.CATEGORY_NO)
		  JOIN OPT O ON(OB.OPTION_NO = O.OPTION_NO)
		  JOIN OPTION_TYPE OT ON(O.OPTION_TYPE_NO = OT.OPTION_TYPE_NO)
		  JOIN (SELECT
		       PB.ORDER_NO
		     , COUNT(PB.ORDER_NO) ORDER_COUNT
		  FROM RECEIPT R
		  JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
		 WHERE USER_NO = ?
		   AND SALE_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE
		 GROUP BY PB.ORDER_NO) SR ON(SR.ORDER_NO = R.ORDER_NO)
		  JOIN (SELECT
		       ORDER_NO
		     , PRODUCT_NO
		     , COUNT(PRODUCT_NO) OPT_COUNT
		  FROM OPTION_BUY
		 GROUP BY ORDER_NO, PRODUCT_NO
		 ORDER BY ORDER_NO DESC) OC ON (R.ORDER_NO = OC.ORDER_NO)
		   AND (P.PRODUCT_NO = OC.PRODUCT_NO)
		 WHERE USER_NO = ?
		   AND SALE_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE
		   AND P.PRODUCT_NO = OT.PRODUCT_NO
		 ORDER BY R.ORDER_NO DESC, P.PRODUCT_NAME DESC) RLIST)
		 WHERE RANK BETWEEN ? AND ?
 
 
	</entry>
	
	
	<entry key="selectRecentReceiptList2">
		SELECT
		       RANK
		     , ROWNUM
		     , ORDER_COUNT
		     , OPTION_YN
		     , OPT_COUNT
		     , ORDER_NO
		     , SALE_DATE
		     , ORDER_SUM
		     , PRODUCT_NO
		     , ORDER_STATE_NO
		     , CATEGORY_NAME
		     , PRODUCT_NAME
		     , PRODUCT_IMG
		     , PRODUCT_QTY
		     , OPTION_NAME
		     , OPTION_QTY
		  FROM(SELECT
		       DENSE_RANK() OVER (ORDER BY RLIST.ORDER_NO DESC) RANK
		     , RLIST.*
		  FROM (SELECT
		               CC.ORDER_COUNT
		             , PB.OPTION_YN
		             , CC.OPT_COUNT
				     , R.ORDER_NO
				     , R.SALE_DATE
				     , R.ORDER_SUM
				     , R.PRODUCT_NO
				     , R.ORDER_STATE_NO
				     , PC.CATEGORY_NAME
				     , P.PRODUCT_NAME
				     , P.PRODUCT_IMG
				     , PB.QUANTITY PRODUCT_QTY
		             , OO.OPTION_NAME
		             , CC.QUANTITY OPTION_QTY
				  FROM RECEIPT R
				  JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
				  JOIN PRODUCT P ON(PB.PRODUCT_NO = P.PRODUCT_NO)
				  JOIN PRODUCT_CATEGORY PC ON(P.CATEGORY_NO = PC.CATEGORY_NO)
		          JOIN(SELECT
		       SR.ORDER_NO
		     , SR.ORDER_COUNT
		     , OC.OPT_COUNT
		     , OC.QUANTITY
		     , OC.OPTION_NO
		  FROM (SELECT
				       PB.ORDER_NO
		             , PB.PRODUCT_NO  
				     , COUNT(PB.ORDER_NO) ORDER_COUNT
				  FROM RECEIPT R
				  JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
				 WHERE USER_NO = ?
				   AND SALE_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE
				 GROUP BY PB.ORDER_NO, PB.PRODUCT_NO) SR
		  LEFT JOIN (SELECT
				       ORDER_NO
				     , PRODUCT_NO
				     , COUNT(PRODUCT_NO) OPT_COUNT
		             , QUANTITY
		             , OPTION_NO
				  FROM OPTION_BUY
				 GROUP BY ORDER_NO, PRODUCT_NO, QUANTITY, OPTION_NO
				 ORDER BY ORDER_NO DESC) OC ON(SR.ORDER_NO = OC.ORDER_NO)
		         AND (SR.PRODUCT_NO = OC.PRODUCT_NO)) CC ON(CC.ORDER_NO = R.ORDER_NO)
		 LEFT JOIN OPT OO ON(OO.OPTION_NO = CC.OPTION_NO)) RLIST)
		 WHERE RANK BETWEEN ? AND ?
 
	</entry>
	<entry key="selectRecentReceiptList3">
		SELECT
       RANK
     , ROWNUM
     , ORDER_COUNT
     , OPTION_YN
     , OPT_COUNT
     , ORDER_NO
     , SALE_DATE
     , ORDER_SUM
     , PRODUCT_NO
     , ORDER_STATE_NO
     , CATEGORY_NAME
     , PRODUCT_NAME
     , PRODUCT_IMG
     , PRODUCT_QTY
     , OPTION_NAME
     , OPTION_QTY
  FROM(SELECT
       DENSE_RANK() OVER (ORDER BY RLIST.ORDER_NO DESC) RANK
     , RLIST.*
  FROM (SELECT
     
       AB.ORDER_COUNT
     , AA.OPTION_YN
     , NVL(OC.OPT_COUNT, 0) OPT_COUNT
     , AA.ORDER_NO
     , AG.SALE_DATE
     , AG.ORDER_SUM
     , AG.PRODUCT_NO
     , AG.ORDER_STATE_NO
     , AD.CATEGORY_NAME
     , AC.PRODUCT_NAME
     , AC.PRODUCT_IMG
     , AA.QUANTITY PRODUCT_QTY
     , AF.OPTION_NAME
     , NVL(AE.QUANTITY, 0) OPTION_QTY
  FROM PRODUCT_BUY AA
  JOIN(SELECT
              PB.ORDER_NO
            , COUNT(PB.ORDER_NO) ORDER_COUNT
         FROM RECEIPT R
         JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
        WHERE USER_NO = ?
          AND SALE_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE
        GROUP BY PB.ORDER_NO) AB ON(AB.ORDER_NO = AA.ORDER_NO)
  LEFT JOIN (SELECT
                    ORDER_NO
                  , PRODUCT_NO
                  , COUNT(PRODUCT_NO) OPT_COUNT
               FROM OPTION_BUY
              GROUP BY ORDER_NO, PRODUCT_NO
              ORDER BY ORDER_NO DESC) OC ON(OC.ORDER_NO = AA.ORDER_NO)
         AND (OC.PRODUCT_NO = AA.PRODUCT_NO)
  JOIN PRODUCT AC ON(AC.PRODUCT_NO = AA.PRODUCT_NO)
  JOIN PRODUCT_CATEGORY AD ON(AC.CATEGORY_NO = AD.CATEGORY_NO)
  LEFT JOIN OPTION_BUY AE ON(AE.ORDER_NO = AA.ORDER_NO)
   AND (AE.PRODUCT_NO = AA.PRODUCT_NO)
  LEFT JOIN OPT AF ON(AF.OPTION_NO = AE.OPTION_NO)
  JOIN RECEIPT AG ON(AA.ORDER_NO = AG.ORDER_NO)) RLIST)
 WHERE RANK BETWEEN ? AND ?
	</entry>
	<entry key="selectRecentReceiptList4">
		SELECT
		       RANK
		     , ROWNUM
		     , ORDER_COUNT
		     , OPTION_YN
		     , OPT_COUNT
		     , ORDER_NO
		     , SALE_DATE
		     , ORDER_SUM
		     , PRODUCT_NO
		     , ORDER_STATE_NO
		     , CATEGORY_NAME
		     , P_NO
		     , PRODUCT_NAME
		     , PRODUCT_IMG
		     , PRODUCT_QTY
		     , OPTION_NAME
		     , OPTION_QTY
		  FROM(SELECT
		       DENSE_RANK() OVER (ORDER BY RLIST.ORDER_NO DESC) RANK
		     , RLIST.*
		  FROM (SELECT
		     
		       AB.ORDER_COUNT
		     , AA.OPTION_YN
		     , NVL(OC.OPT_COUNT, 0) OPT_COUNT
		     , AA.ORDER_NO
		     , AG.SALE_DATE
		     , AG.ORDER_SUM
		     , AG.PRODUCT_NO
		     , AG.ORDER_STATE_NO
		     , AD.CATEGORY_NAME
		     , AC.PRODUCT_NAME
		     , AC.PRODUCT_IMG
		     , AA.QUANTITY PRODUCT_QTY
		     , AA.PRODUCT_NO P_NO
		     , AF.OPTION_NAME
		     , NVL(AE.QUANTITY, 0) OPTION_QTY
		  FROM PRODUCT_BUY AA
		  JOIN(SELECT
		              PB.ORDER_NO
		            , COUNT(PB.ORDER_NO) ORDER_COUNT
		         FROM RECEIPT R
		         JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
		        WHERE USER_NO = ?
		          AND SALE_DATE BETWEEN ADD_MONTHS(SYSDATE,-1) AND SYSDATE
		        GROUP BY PB.ORDER_NO) AB ON(AB.ORDER_NO = AA.ORDER_NO)
		  LEFT JOIN (SELECT
		                    ORDER_NO
		                  , PRODUCT_NO
		                  , COUNT(PRODUCT_NO) OPT_COUNT
		               FROM OPTION_BUY
		              GROUP BY ORDER_NO, PRODUCT_NO
		              ORDER BY ORDER_NO DESC) OC ON(OC.ORDER_NO = AA.ORDER_NO)
		         AND (OC.PRODUCT_NO = AA.PRODUCT_NO)
		  JOIN PRODUCT AC ON(AC.PRODUCT_NO = AA.PRODUCT_NO)
		  JOIN PRODUCT_CATEGORY AD ON(AC.CATEGORY_NO = AD.CATEGORY_NO)
		  LEFT JOIN OPTION_BUY AE ON(AE.ORDER_NO = AA.ORDER_NO)
		   AND (AE.PRODUCT_NO = AA.PRODUCT_NO)
		  LEFT JOIN OPT AF ON(AF.OPTION_NO = AE.OPTION_NO)
		  JOIN RECEIPT AG ON(AA.ORDER_NO = AG.ORDER_NO)) RLIST)
		 WHERE RANK BETWEEN ? AND ?
	</entry>
	<entry key="selectDailyReceiptList">
		SELECT
		       RANK
		     , ROWNUM
		     , ORDER_COUNT
		     , OPTION_YN
		     , OPT_COUNT
		     , ORDER_NO
		     , SALE_DATE
		     , ORDER_SUM
		     , PRODUCT_NO
		     , ORDER_STATE_NO
		     , CATEGORY_NAME
		     , PRODUCT_NAME
		     , PRODUCT_IMG
		     , PRODUCT_QTY
		     , OPTION_NAME
		     , OPTION_QTY
		  FROM(SELECT
		       DENSE_RANK() OVER (ORDER BY RLIST.ORDER_NO DESC) RANK
		     , RLIST.*
		  FROM (SELECT
		       SR.ORDER_COUNT
		     , PB.OPTION_YN
		     , OC.OPT_COUNT
		     , R.ORDER_NO
		     , R.SALE_DATE
		     , R.ORDER_SUM
		     , R.PRODUCT_NO
		     , R.ORDER_STATE_NO
		     , PC.CATEGORY_NAME
		     , P.PRODUCT_NAME
		     , P.PRODUCT_IMG
		     , PB.QUANTITY PRODUCT_QTY
		     , O.OPTION_NAME
		     , OB.QUANTITY OPTION_QTY
		  FROM RECEIPT R
		  JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
		  JOIN OPTION_BUY OB ON(R.ORDER_NO = OB.ORDER_NO)
		  JOIN PRODUCT P ON(PB.PRODUCT_NO = P.PRODUCT_NO)
		  JOIN PRODUCT_CATEGORY PC ON(P.CATEGORY_NO = PC.CATEGORY_NO)
		  JOIN OPT O ON(OB.OPTION_NO = O.OPTION_NO)
		  JOIN OPTION_TYPE OT ON(O.OPTION_TYPE_NO = OT.OPTION_TYPE_NO)
		  JOIN (SELECT
		       PB.ORDER_NO
		     , COUNT(PB.ORDER_NO) ORDER_COUNT
		  FROM RECEIPT R
		  JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
		 WHERE USER_NO = ?
		   AND SALE_DATE BETWEEN ? AND ?
		 GROUP BY PB.ORDER_NO) SR ON(SR.ORDER_NO = R.ORDER_NO)
		  JOIN (SELECT
		       ORDER_NO
		     , PRODUCT_NO
		     , COUNT(PRODUCT_NO) OPT_COUNT
		  FROM OPTION_BUY
		 GROUP BY ORDER_NO, PRODUCT_NO
		 ORDER BY ORDER_NO DESC) OC ON (R.ORDER_NO = OC.ORDER_NO)
		   AND (P.PRODUCT_NO = OC.PRODUCT_NO)
		 WHERE USER_NO = ?
		   AND SALE_DATE BETWEEN ? AND ?
		   AND P.PRODUCT_NO = OT.PRODUCT_NO
		 ORDER BY R.ORDER_NO DESC, P.PRODUCT_NAME DESC) RLIST)
		 WHERE RANK BETWEEN ? AND ?
	</entry>
	<entry key="selectDailyReceiptList2">
		SELECT
		       RANK
		     , ROWNUM
		     , ORDER_COUNT
		     , OPTION_YN
		     , OPT_COUNT
		     , ORDER_NO
		     , SALE_DATE
		     , ORDER_SUM
		     , PRODUCT_NO
		     , ORDER_STATE_NO
		     , CATEGORY_NAME
		     , PRODUCT_NAME
		     , PRODUCT_IMG
		     , PRODUCT_QTY
		     , OPTION_NAME
		     , OPTION_QTY
		  FROM(SELECT
		       DENSE_RANK() OVER (ORDER BY RLIST.ORDER_NO DESC) RANK
		     , RLIST.*
		  FROM (SELECT
		               CC.ORDER_COUNT
		             , PB.OPTION_YN
		             , CC.OPT_COUNT
				     , R.ORDER_NO
				     , R.SALE_DATE
				     , R.ORDER_SUM
				     , R.PRODUCT_NO
				     , R.ORDER_STATE_NO
				     , PC.CATEGORY_NAME
				     , P.PRODUCT_NAME
				     , P.PRODUCT_IMG
				     , PB.QUANTITY PRODUCT_QTY
		             , OO.OPTION_NAME
		             , CC.QUANTITY OPTION_QTY
				  FROM RECEIPT R
				  JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
				  JOIN PRODUCT P ON(PB.PRODUCT_NO = P.PRODUCT_NO)
				  JOIN PRODUCT_CATEGORY PC ON(P.CATEGORY_NO = PC.CATEGORY_NO)
		          JOIN(SELECT
		       SR.ORDER_NO
		     , SR.ORDER_COUNT
		     , OC.OPT_COUNT
		     , OC.QUANTITY
		     , OC.OPTION_NO
		  FROM (SELECT
				       PB.ORDER_NO
		             , PB.PRODUCT_NO  
				     , COUNT(PB.ORDER_NO) ORDER_COUNT
				  FROM RECEIPT R
				  JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
				 WHERE USER_NO = ?
				   AND SALE_DATE BETWEEN ? AND ?
				 GROUP BY PB.ORDER_NO, PB.PRODUCT_NO) SR
		  LEFT JOIN (SELECT
				       ORDER_NO
				     , PRODUCT_NO
				     , COUNT(PRODUCT_NO) OPT_COUNT
		             , QUANTITY
		             , OPTION_NO
				  FROM OPTION_BUY
				 GROUP BY ORDER_NO, PRODUCT_NO, QUANTITY, OPTION_NO
				 ORDER BY ORDER_NO DESC) OC ON(SR.ORDER_NO = OC.ORDER_NO)
		         AND (SR.PRODUCT_NO = OC.PRODUCT_NO)) CC ON(CC.ORDER_NO = R.ORDER_NO)
		 LEFT JOIN OPT OO ON(OO.OPTION_NO = CC.OPTION_NO)) RLIST)
		 WHERE RANK BETWEEN ? AND ?
	</entry>
	<entry key="selectDailyReceiptList3">
		SELECT
       RANK
     , ROWNUM
     , ORDER_COUNT
     , OPTION_YN
     , OPT_COUNT
     , ORDER_NO
     , SALE_DATE
     , ORDER_SUM
     , PRODUCT_NO
     , ORDER_STATE_NO
     , CATEGORY_NAME
     , P_NO
     , PRODUCT_NAME
     , PRODUCT_IMG
     , PRODUCT_QTY
     , OPTION_NAME
     , OPTION_QTY
  FROM(SELECT
       DENSE_RANK() OVER (ORDER BY RLIST.ORDER_NO DESC) RANK
     , RLIST.*
  FROM (SELECT
     
       AB.ORDER_COUNT
     , AA.OPTION_YN
     , NVL(OC.OPT_COUNT, 0) OPT_COUNT
     , AA.ORDER_NO
     , AG.SALE_DATE
     , AG.ORDER_SUM
     , AG.PRODUCT_NO
     , AG.ORDER_STATE_NO
     , AD.CATEGORY_NAME
     , AC.PRODUCT_NAME
     , AC.PRODUCT_IMG
     , AA.QUANTITY PRODUCT_QTY
     , AA.PRODUCT_NO P_NO
     , AF.OPTION_NAME
     , NVL(AE.QUANTITY, 0) OPTION_QTY
  FROM PRODUCT_BUY AA
  JOIN(SELECT
              PB.ORDER_NO
            , COUNT(PB.ORDER_NO) ORDER_COUNT
         FROM RECEIPT R
         JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
        WHERE USER_NO = ?
          AND SALE_DATE BETWEEN ? AND ?
        GROUP BY PB.ORDER_NO) AB ON(AB.ORDER_NO = AA.ORDER_NO)
  LEFT JOIN (SELECT
                    ORDER_NO
                  , PRODUCT_NO
                  , COUNT(PRODUCT_NO) OPT_COUNT
               FROM OPTION_BUY
              GROUP BY ORDER_NO, PRODUCT_NO
              ORDER BY ORDER_NO DESC) OC ON(OC.ORDER_NO = AA.ORDER_NO)
         AND (OC.PRODUCT_NO = AA.PRODUCT_NO)
  JOIN PRODUCT AC ON(AC.PRODUCT_NO = AA.PRODUCT_NO)
  JOIN PRODUCT_CATEGORY AD ON(AC.CATEGORY_NO = AD.CATEGORY_NO)
  LEFT JOIN OPTION_BUY AE ON(AE.ORDER_NO = AA.ORDER_NO)
   AND (AE.PRODUCT_NO = AA.PRODUCT_NO)
  LEFT JOIN OPT AF ON(AF.OPTION_NO = AE.OPTION_NO)
  JOIN RECEIPT AG ON(AA.ORDER_NO = AG.ORDER_NO)) RLIST)
 WHERE RANK BETWEEN ? AND ?
	</entry>
	<entry key="selectMonthlyReceiptList">
		SELECT
			   ORDER_NO
			 , SALE_DATE
			 , COIN
			 , DELIVERY_DATE
			 , ORDER_SUM
			 , USER_NO
			 , PRODUCT_NO
			 , ORDER_STATE_NO
		  FROM RECEIPT
		 WHERE USER_NO = ?
		   AND TO_CHAR(SALE_DATE, 'YYYYMMDD') BETWEEN  TO_CHAR(TO_DATE(?, 'YYYYMM'), 'YYYYMMDD') AND TO_CHAR(LAST_DAY(TO_DATE(?, 'YYYYMM')), 'YYYYMMDD')
	</entry>
	<entry key="selectDailySalesAnalysistList">
		SELECT
		       T.SALE_DATE
		     , T.SALE_DAY
		     , T.COUNT_SALES
		     , T.TOTAL_SALES
		     , NVL(T.TOTAL_SALES, 0) - NVL(C.CANCEL_SALES, 0) - NVL(R.RETURN_SALES, 0) ACTUAL_SALES
		     , NVL(C.CANCEL_SALES, 0) CANCEL_SALES
		     , NVL(R.RETURN_SALES, 0) RETURN_SALES
		  FROM (SELECT
				       TO_CHAR(SALE_DATE, 'YYYYMMDD') SALE_DATE
				     , TO_CHAR(SALE_DATE, 'DY') SALE_DAY
				     , COUNT(*) COUNT_SALES
				     , SUM(ORDER_SUM) TOTAL_SALES
				  FROM RECEIPT
				 WHERE TO_CHAR(SALE_DATE, 'YYYYMMDD') BETWEEN ? AND ?
				 GROUP BY TO_CHAR(SALE_DATE, 'YYYYMMDD'), TO_CHAR(SALE_DATE, 'DY')) T
		 LEFT JOIN (SELECT
					       TO_CHAR(SALE_DATE, 'YYYYMMDD') SALE_DATE
					     , SUM(ORDER_SUM) CANCEL_SALES
					  FROM RECEIPT
					 WHERE TO_CHAR(SALE_DATE, 'YYYYMMDD') BETWEEN ? AND ?
					   AND ORDER_STATE_NO = 5
					 GROUP BY TO_CHAR(SALE_DATE, 'YYYYMMDD')) C ON(T.SALE_DATE = C.SALE_DATE)
		 LEFT JOIN (SELECT
					       TO_CHAR(SALE_DATE, 'YYYYMMDD') SALE_DATE
					     , SUM(ORDER_SUM) RETURN_SALES
					  FROM RECEIPT
					 WHERE TO_CHAR(SALE_DATE, 'YYYYMMDD') BETWEEN ? AND ?
					   AND ORDER_STATE_NO = 99
					 GROUP BY TO_CHAR(SALE_DATE, 'YYYYMMDD')) R ON(T.SALE_DATE = R.SALE_DATE)
		ORDER BY T.SALE_DATE DESC
	</entry>
	<entry key="selectMonthlySalesAnalysistList">
		SELECT
		       T.SALE_DATE
		     , T.COUNT_SALES
		     , T.TOTAL_SALES
		     , NVL(T.TOTAL_SALES, 0) - NVL(C.CANCEL_SALES, 0) - NVL(R.RETURN_SALES, 0) ACTUAL_SALES
		     , NVL(C.CANCEL_SALES, 0) CANCEL_SALES
		     , NVL(R.RETURN_SALES, 0) RETURN_SALES
		  FROM (SELECT
				       TO_CHAR(SALE_DATE, 'YYYYMM') SALE_DATE
				     , COUNT(*) COUNT_SALES
				     , SUM(ORDER_SUM) TOTAL_SALES
				  FROM RECEIPT
				 WHERE TO_CHAR(SALE_DATE, 'YYYYMM') BETWEEN ? AND ?
				 GROUP BY TO_CHAR(SALE_DATE, 'YYYYMM')) T
		 LEFT JOIN (SELECT
					       TO_CHAR(SALE_DATE, 'YYYYMM') SALE_DATE
					     , SUM(ORDER_SUM) CANCEL_SALES
					  FROM RECEIPT
					 WHERE TO_CHAR(SALE_DATE, 'YYYYMM') BETWEEN ? AND ?
					   AND ORDER_STATE_NO = 5
					 GROUP BY TO_CHAR(SALE_DATE, 'YYYYMM')) C ON(T.SALE_DATE = C.SALE_DATE)
		 LEFT JOIN (SELECT
					       TO_CHAR(SALE_DATE, 'YYYYMM') SALE_DATE
					     , SUM(ORDER_SUM) RETURN_SALES
					  FROM RECEIPT
					 WHERE TO_CHAR(SALE_DATE, 'YYYYMM') BETWEEN ? AND ?
					   AND ORDER_STATE_NO = 99
					 GROUP BY TO_CHAR(SALE_DATE, 'YYYYMM')) R ON(T.SALE_DATE = R.SALE_DATE)
		 ORDER BY T.SALE_DATE DESC
	</entry>
	<entry key="selectRankingTop5">
		SELECT
		       RANKING
		     , CATEGORY_NAME
		     , PRODUCT_NAME
		     , PRODUCT_IMG
		     , QUANTITY
		     , TOTAL
		  FROM (SELECT
				       RANK() OVER (ORDER BY P.PRODUCT_PRICE * PQ.QUANTITY DESC) RANKING
				     , PC.CATEGORY_NAME
				     , P.PRODUCT_NAME
				     , P.PRODUCT_IMG
				     , PQ.QUANTITY
				     , P.PRODUCT_PRICE * PQ.QUANTITY TOTAL
				  FROM PRODUCT P
				  JOIN PRODUCT_CATEGORY PC ON(P.CATEGORY_NO = PC.CATEGORY_NO)
		  JOIN (SELECT
		               PB.PRODUCT_NO
		             , COUNT(*) QUANTITY
		          FROM RECEIPT R
		          JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
		          JOIN PRODUCT P ON(PB.PRODUCT_NO = P.PRODUCT_NO)
		         WHERE SALE_DATE BETWEEN ADD_MONTHS(SYSDATE,-6) AND SYSDATE
		         GROUP BY PB.PRODUCT_NO) PQ ON(PQ.PRODUCT_NO = P.PRODUCT_NO)
		 ORDER BY RANKING ASC)
		 WHERE RANKING BETWEEN 1 AND 5
	</entry>
	<entry key="selectRankingTop5Ver2">
		SELECT
		       RANKING
		     , CATEGORY_NAME
		     , PRODUCT_NAME
		     , PRODUCT_IMG
		     , QUANTITY
		     , TOTAL
		  FROM (SELECT
				       RANK() OVER (ORDER BY P.PRODUCT_PRICE * PQ.QUANTITY DESC) RANKING
				     , PC.CATEGORY_NAME
				     , P.PRODUCT_NAME
				     , P.PRODUCT_IMG
				     , PQ.QUANTITY
				     , P.PRODUCT_PRICE * PQ.QUANTITY TOTAL
				  FROM PRODUCT P
				  JOIN PRODUCT_CATEGORY PC ON(P.CATEGORY_NO = PC.CATEGORY_NO)
		  JOIN (SELECT
		               PB.PRODUCT_NO
		             , QUANTITY
		          FROM RECEIPT R
		          JOIN PRODUCT_BUY PB ON(R.ORDER_NO = PB.ORDER_NO)
		          JOIN PRODUCT P ON(PB.PRODUCT_NO = P.PRODUCT_NO)
		         WHERE SALE_DATE BETWEEN ADD_MONTHS(SYSDATE,-6) AND SYSDATE
		         GROUP BY PB.PRODUCT_NO, QUANTITY) PQ ON(PQ.PRODUCT_NO = P.PRODUCT_NO)
		 ORDER BY RANKING ASC)
		 WHERE RANKING BETWEEN 1 AND 5
	</entry>
	<entry key="selectRankingTop5Ver3">
		SELECT
		       RANKING
		     , CATEGORY_NAME
		     , PRODUCT_NAME
		     , PRODUCT_IMG
		     , QUANTITY
		     , TOTAL
		  FROM (SELECT
		       RANK() OVER (ORDER BY AG.PRODUCT_PRICE * AH.QUANTITY DESC) RANKING
		     , AG.PRODUCT_NAME
		     , AG.PRODUCT_IMG
		     , AH.QUANTITY
		     , AI.CATEGORY_NAME
		     , AG.PRODUCT_PRICE * AH.QUANTITY TOTAL
		  FROM PRODUCT AG
		  JOIN(SELECT
		       AE.PRODUCT_NO
		     , SUM(QUANTITY) QUANTITY
		  FROM PRODUCT_BUY AE
		  JOIN(SELECT 
		       AC.PRODUCT_NO
		  FROM RECEIPT AA
		  JOIN PRODUCT_BUY AB ON(AA.ORDER_NO = AB.ORDER_NO)
		  JOIN PRODUCT AC ON(AC.PRODUCT_NO = AB.PRODUCT_NO)
		 GROUP BY AC.PRODUCT_NO) AF ON(AE.PRODUCT_NO = AF.PRODUCT_NO)
		 GROUP BY AE.PRODUCT_NO) AH ON(AG.PRODUCT_NO = AH.PRODUCT_NO)
		  JOIN PRODUCT_CATEGORY AI ON(AI.CATEGORY_NO = AG.CATEGORY_NO))
		 WHERE RANKING BETWEEN 1 AND 5
	</entry>
	<entry key="cancelProduct">
		UPDATE
		       RECEIPT
		   SET PRODUCT_NO = 2
		 WHERE ORDER_NO = ?
	</entry>
</properties>